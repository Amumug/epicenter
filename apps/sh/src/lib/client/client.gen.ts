// This file is auto-generated by @hey-api/openapi-ts

import type { WorkspaceConfig } from '$lib/stores/workspace-configs.svelte';
import type { ClientOptions } from './types.gen';
import {
	type Config,
	type ClientOptions as DefaultClientOptions,
	createClient,
	createConfig,
} from './client';
import { browser } from '$app/environment';

/**
 * The `createClientConfig()` function will be called on client initialization
 * and the returned object will become the client's initial configuration.
 *
 * You may want to initialize your client this way instead of calling
 * `setConfig()`. This is useful for example if you're using Next.js
 * to ensure your client always has the correct values.
 */
export type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> =
	(
		override?: Config<DefaultClientOptions & T>,
	) => Config<Required<DefaultClientOptions> & T>;

export const client = createClient(
	createConfig<ClientOptions>({
		baseUrl: browser ? '/api' : 'http://localhost:4096',
	}),
);

/**
 * Create an API client configured for a specific workspace
 */
export function createWorkspaceClient(workspace: WorkspaceConfig) {
	// Create basic auth header
	const auth = btoa(`${workspace.username}:${workspace.password}`);

	// Create a new client with workspace-specific configuration
	return createClient(
		createConfig<ClientOptions>({
			baseUrl: 'http://localhost:8080',
			// baseUrl: getProxiedBaseUrl(workspace.url),
			headers: {
				Authorization: `Basic ${auth}`,
			},
		}),
	);
}
